import {
    databaseApi,
    getData
} from "./router.js";

function validateURL(e) {
    const t = new RegExp("^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$", "i");
    return t.test(e)
}
async function checkSlug(e) {
    console.log(e);
    try {
        const t = await getData(`${databaseApi}.json?orderBy="$key"&equalTo="${e}"&print=pretty`);
        const o = t[`${e}`].domain;
        return console.log(t), console.log(o), console.log(!1), !1
    } catch (e) {
        return console.log(e), !0
    }
}
async function generateSlug(e) {
    console.log(e);
    let t = "";
    const o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    const n = o.length;
    for (let l = 0; l < e; l++) t += o.charAt(Math.floor(Math.random() * n));
    return await checkSlug(t) ? (console.log("slug true"), t) : (console.log("slug false"), generateSlug(e + 1))
}

function defineVariable() {
    link = document.querySelector("#link");
    result = document.querySelector("#result"), urlValidity = document.querySelector("#urlValidity"), copyBTN = document.querySelector('button[onclick="copyShortLink()"]'), qrBTN = document.querySelector('button[onclick="createQR()"]')
}
console.log("medo");
const putData = async (e = "", t = {}) => {
    const o = await fetch(e, {
        method: "PUT",
        body: JSON.stringify(t),
        headers: {
            "Content-Type": "application/json"
        },
        mode: "cors",
        credentials: "same-origin"
    });
    return o.json()
};
let link;
let result;
let urlValidity;
let copyBTN;
let qrBTN;
window.createNewShortLink = (() => {
    let e;
    link || defineVariable();
    const t = link.value;
    validateURL(t) ? (console.log("domain is valid!"), generateSlug(5).then(t => {
        e = t, console.log(e)
    }).then(() => putData(`${databaseApi}/${e}.json`, {
        domain: t
    })).then(t => {
        console.log(t), result.innerText = `${window.location.host}/${e}`
    }).then(() => {
        copyBTN.className = "", copyBTN.style.display = "inline", qrBTN.className = "", qrBTN.style.display = "inline"
    }).catch(e => console.log(e))) : (console.log("invalid"), urlValidity.innerText = "URL isn't valid!")
}), window.copyShortLink = (() => {
    const e = document.createElement("input");
    e.setAttribute("value", result.innerText), document.body.appendChild(e), e.select();
    try {
        document.execCommand("copy")
    } catch (e) {
        console.warn("Copy to clipboard failed.", e)
    }
    document.body.removeChild(e)
}), window.createQR = (() => {
    const e = `https://${result.innerText}`;
    const t = document.querySelector("#qrImg");
    t.setAttribute("src", `https://api.qrserver.com/v1/create-qr-code/?data=${e}&size=100x100`), t.className = "", t.style.display = "block", console.log(e)
});